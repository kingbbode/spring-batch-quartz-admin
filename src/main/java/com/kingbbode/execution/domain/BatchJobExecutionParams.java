package com.kingbbode.execution.domain;

import lombok.Getter;
import lombok.Setter;
import org.springframework.util.ObjectUtils;
import org.springframework.util.StringUtils;

import javax.persistence.*;
import java.util.Date;

/**
 * BatchJobExecutionParams generated by hbm2java
 */
@Getter
@Setter
@Entity
@Table(name="BATCH_JOB_EXECUTION_PARAMS")
public class BatchJobExecutionParams  implements java.io.Serializable {

    @EmbeddedId
    private BatchJobExecutionParamsId id;

    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="JOB_EXECUTION_ID", nullable=false, insertable=false, updatable=false)
    private BatchJobExecution batchJobExecution;

    @Transient
    public String getValue() {
        String value = findValue();
        return StringUtils.isEmpty(value) ? "" : value;
    }

    private String findValue() {
        switch (this.id.typeCd) {
            case "STRING" :
                return this.id.stringVal;
            case "DATE" :
                return ObjectUtils.isEmpty(this.id.dateVal)?null:this.id.dateVal.toString();
            case "LONG" :
                return String.valueOf(this.id.longVal);
            case "DOUBLE" :
                return String.valueOf(this.id.doubleVal);
            default:
                return null;
        }
    }

    @Getter
    @Setter
    @Embeddable
    public static class BatchJobExecutionParamsId  implements java.io.Serializable {

        @Column(name="JOB_EXECUTION_ID", nullable=false)
        private long jobExecutionId;
        @Column(name="TYPE_CD", nullable=false, length=6)
        private String typeCd;
        @Column(name="KEY_NAME", nullable=false, length=100)
        private String keyName;
        @Column(name="STRING_VAL", length=250)
        private String stringVal;
        @Column(name="DATE_VAL", length=19)
        private Date dateVal;
        @Column(name="LONG_VAL")
        private Long longVal;
        @Column(name="DOUBLE_VAL", precision=22)
        private Double doubleVal;
        @Column(name="IDENTIFYING", nullable=false, length=1)
        private char identifying;

    }
}


