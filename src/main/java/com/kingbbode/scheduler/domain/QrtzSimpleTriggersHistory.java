package com.kingbbode.scheduler.domain;

import com.kingbbode.scheduler.dto.SchedulerDetailResponse;
import lombok.*;
import org.quartz.JobDataMap;
import org.quartz.SimpleTrigger;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.time.ZoneId;

/**
 * QrtzTriggers generated by hbm2java
 */
@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Builder
@Entity
@Table(name="QRTZ_TRIGGERS_HISTORY")
public class QrtzSimpleTriggersHistory implements java.io.Serializable {

    @Id
    @GeneratedValue
    private Long idx;

    @Column(name="SCHED_NAME", nullable=false, length=120)
    private String schedName;

    @Column(name="JOB_NAME", nullable=false, length=200)
    private String jobName;

    @Column(name="TRIGGER_NAME", nullable=false, length=200)
    private String triggerName;

    @Column(name="REPEAT")
    private int repeat;

    @Column(name="INTERVAL")
    private int repeatInterval;

    @Column(name="EXECUTOR", nullable=false, length=200)
    private String executor;

    @Column(name="EXECUTE_DATE")
    private LocalDateTime executeDateTime;

    public SchedulerDetailResponse.SimpleTrigger toSimpleTrigger() {
        return SchedulerDetailResponse.SimpleTrigger.builder()
                .name(this.triggerName)
                .repeat(this.repeat)
                .repeatInterval(this.repeatInterval)
                .executor(this.executor)
                .executeTimeStamp(this.executeDateTime.atZone(ZoneId.systemDefault()).toInstant().toEpochMilli())
                .build();
    }
}


